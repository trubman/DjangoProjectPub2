# Generated by Django 5.1.5 on 2025-01-16 08:25

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Conclusion',
            fields=[
                ('conclusion_type', models.CharField(max_length=300, primary_key=True, serialize=False, unique=True, verbose_name='Тип заключения')),
                ('conclusion_text', models.TextField(verbose_name='Текст заключения')),
            ],
            options={
                'verbose_name': 'Заключение',
                'verbose_name_plural': 'Заключения',
                'ordering': ['-conclusion_type'],
            },
        ),
        migrations.CreateModel(
            name='Guarantee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guarantee_type', models.CharField(max_length=300, verbose_name='Тип гарантии')),
                ('guarantee_text', models.TextField(verbose_name='Текст гарантии')),
            ],
            options={
                'verbose_name': 'Гарантия',
                'verbose_name_plural': 'Гарантии',
                'ordering': ['-guarantee_type'],
            },
        ),
        migrations.CreateModel(
            name='Kernel',
            fields=[
                ('number_spg', models.CharField(max_length=200, primary_key=True, serialize=False, unique=True, verbose_name='Номер СПГ')),
                ('designation', models.TextField(verbose_name='Обозначение')),
                ('denomination', models.TextField(blank=True, null=True, verbose_name='Наименование')),
                ('quantity', models.PositiveIntegerField(blank=True, default=1, verbose_name='Количество')),
                ('is_atom', models.BooleanField(blank=True, default=False, null=True, verbose_name='Атомка')),
                ('atom_contract', models.TextField(blank=True, null=True, verbose_name='Атомный контракт')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
            },
        ),
        migrations.CreateModel(
            name='Melt',
            fields=[
                ('melt_id', models.CharField(blank=True, max_length=600, primary_key=True, serialize=False, unique=True, verbose_name='Идентификатор')),
                ('melt_number', models.CharField(max_length=300, verbose_name='Номер плавки')),
                ('material_id', models.CharField(max_length=300, verbose_name='ID материала')),
                ('melt_year', models.CharField(max_length=300, verbose_name='Год плавки')),
                ('melt_passport', models.CharField(max_length=300, verbose_name='Номер паспорта плавки')),
                ('by_gost_number', models.PositiveIntegerField(blank=True, verbose_name='Номер по ГОСТ')),
                ('carboneum', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='C (углерод)')),
                ('manganum', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='Mn (марганец)')),
                ('silicium', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='Si (кремний)')),
                ('sulfur', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='S (сера)')),
                ('phosphorus', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='P (фосфор)')),
                ('chromium', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='Cr (хром)')),
                ('molybdaenum', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='Mo (молибден)')),
                ('niccolum', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='Ni (никель)')),
                ('niobium', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='Nb (ниобий)')),
                ('titanium', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='Ti (титан)')),
                ('cuprum', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='Cu (медь)')),
                ('magnesium', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='Mg (магний)')),
                ('ferrum', models.DecimalField(blank=True, decimal_places=3, max_digits=7, null=True, verbose_name='Fe (железо)')),
                ('tensile_strength', models.PositiveIntegerField(blank=True, null=True, verbose_name='Предел прочности')),
                ('yield_strength', models.PositiveIntegerField(blank=True, null=True, verbose_name='Предел текучести')),
                ('relative_extension', models.PositiveIntegerField(blank=True, null=True, verbose_name='Относительное удлинение')),
                ('relative_narrowing', models.PositiveIntegerField(blank=True, null=True, verbose_name='Относительное сужение')),
                ('impact_strength', models.CharField(blank=True, max_length=300, null=True, verbose_name='Ударная вязкость')),
                ('impact_strength_60KCU', models.CharField(blank=True, max_length=300, null=True, verbose_name='Ударная вязкость КСU-60')),
                ('impact_strength_60KCV', models.CharField(blank=True, max_length=300, null=True, verbose_name='Ударная вязкость КСV-60')),
                ('hardness', models.CharField(blank=True, max_length=300, null=True, verbose_name='Твердость')),
                ('mkk', models.CharField(blank=True, max_length=300, null=True, verbose_name='МКК')),
            ],
            options={
                'verbose_name': 'Плавка',
                'verbose_name_plural': 'Плавки',
                'ordering': ['-melt_year'],
            },
        ),
        migrations.CreateModel(
            name='SertNumber',
            fields=[
                ('id', models.CharField(blank=True, max_length=500, primary_key=True, serialize=False, unique=True, verbose_name='Идентификатор/Номер сертификата')),
                ('number', models.PositiveIntegerField(blank=True, verbose_name='Номер по порядку')),
                ('year', models.PositiveIntegerField(blank=True, verbose_name='Год')),
            ],
            options={
                'verbose_name': 'Номер сертификата',
                'verbose_name_plural': 'Номера сертификатов',
                'ordering': ['-year', '-number'],
            },
        ),
        migrations.CreateModel(
            name='Signatories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sign_type', models.CharField(max_length=300, verbose_name='Тип подписантов')),
                ('sign_person', models.CharField(max_length=300, verbose_name='ФИО подписанта')),
                ('sign_job_title', models.CharField(max_length=300, verbose_name='Должность подписанта')),
            ],
            options={
                'verbose_name': 'Подписанты',
                'verbose_name_plural': 'Подписанты',
                'ordering': ['-sign_type'],
            },
        ),
        migrations.CreateModel(
            name='Sert',
            fields=[
                ('id', models.CharField(blank=True, max_length=500, primary_key=True, serialize=False, unique=True, verbose_name='Идентификатор')),
                ('is_print', models.BooleanField(blank=True, default=True, null=True, verbose_name='На печать')),
                ('sert_type', models.CharField(choices=[('НАСОС', 'НАСОС'), ('АРМАТУРА', 'АРМАТУРА'), ('НАСОС_КУСОЧКИ', 'НАСОС_КУСОЧКИ'), ('АРМАТУРА_КУСОЧКИ', 'АРМАТУРА_КУСОЧКИ'), ('РЕМКОМПЛЕКТ', 'РЕМКОМПЛЕКТ'), ('ГАЛЬВАНИКА', 'ГАЛЬВАНИКА'), ('НАСОС_ХИМ', 'НАСОС_ХИМ'), ('АРМАТУРА_ХИМ', 'АРМАТУРА_ХИМ'), ('СЕРТ_ЦТК', 'СЕРТ_ЦТК'), ('СЕРТ_ЦТК_ГГ_НАСОС', 'СЕРТ_ЦТК_ГГ_НАСОС'), ('СЕРТ_ЦТК_НТ_ВЭЛВ', 'СЕРТ_ЦТК_НТ_ВЭЛВ')], default='НАСОС', max_length=500, verbose_name='Тип сертификата')),
                ('date', models.DateField(default=datetime.datetime.now, verbose_name='Дата сертификата')),
                ('galvan_date', models.DateField(default=datetime.datetime.now, verbose_name='Дата для гальваники')),
                ('is_drag_met', models.BooleanField(blank=True, default=False, null=True, verbose_name='Есть драгоценные металлы')),
                ('guarantee_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Тип гарантии')),
                ('sign_type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Тип подписантов')),
                ('conclusion_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sert.conclusion', verbose_name='Тип заключения')),
                ('number_spg', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sert.kernel', verbose_name='Номер СПГ')),
                ('number_unique', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='sert.sertnumber', verbose_name='Номер сертификата')),
            ],
            options={
                'verbose_name': 'Сертификат',
                'verbose_name_plural': 'Сертификаты',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sert_type', models.CharField(blank=True, choices=[('НАСОС', 'НАСОС'), ('АРМАТУРА', 'АРМАТУРА'), ('НАСОС_КУСОЧКИ', 'НАСОС_КУСОЧКИ'), ('АРМАТУРА_КУСОЧКИ', 'АРМАТУРА_КУСОЧКИ'), ('РЕМКОМПЛЕКТ', 'РЕМКОМПЛЕКТ'), ('ГАЛЬВАНИКА', 'ГАЛЬВАНИКА'), ('НАСОС_ХИМ', 'НАСОС_ХИМ'), ('АРМАТУРА_ХИМ', 'АРМАТУРА_ХИМ'), ('СЕРТ_ЦТК', 'СЕРТ_ЦТК'), ('СЕРТ_ЦТК_ГГ_НАСОС', 'СЕРТ_ЦТК_ГГ_НАСОС'), ('СЕРТ_ЦТК_НТ_ВЭЛВ', 'СЕРТ_ЦТК_НТ_ВЭЛВ')], default='РЕМКОМПЛЕКТ', max_length=500, verbose_name='Тип сертификата')),
                ('designation', models.TextField(blank=True, verbose_name='Обозначение')),
                ('denomination', models.TextField(blank=True, null=True, verbose_name='Наименование')),
                ('quantity', models.DecimalField(blank=True, decimal_places=3, default=1.0, max_digits=7, verbose_name='Количество')),
                ('item_units', models.CharField(blank=True, choices=[('INT', 'INT'), ('LITERS', 'LITERS'), ('METERS', 'METERS'), ('KILOGRAMS', 'KILOGRAMS')], default='INT', max_length=100, verbose_name='Единицы измерения')),
                ('n_index', models.IntegerField(blank=True, null=True, verbose_name='n_index')),
                ('a_index', models.CharField(blank=True, max_length=500, null=True, verbose_name='a_index')),
                ('b_index', models.CharField(blank=True, max_length=500, null=True, verbose_name='b_index')),
                ('a1_index', models.CharField(blank=True, max_length=500, null=True, verbose_name='a1_index')),
                ('b1_index', models.CharField(blank=True, max_length=500, null=True, verbose_name='b1_index')),
                ('a2_index', models.CharField(blank=True, max_length=500, null=True, verbose_name='a2_index')),
                ('b2_index', models.CharField(blank=True, max_length=500, null=True, verbose_name='b2_index')),
                ('is_one', models.BooleanField(default=False, verbose_name='is_one')),
                ('is_two', models.BooleanField(default=False, verbose_name='is_two')),
                ('is_three', models.BooleanField(default=False, verbose_name='is_three')),
                ('is_four', models.BooleanField(default=False, verbose_name='is_four')),
                ('melt_number', models.CharField(blank=True, max_length=300, null=True, verbose_name='Номер плавки')),
                ('material_id', models.CharField(blank=True, max_length=300, null=True, verbose_name='ID материала')),
                ('melt_year', models.CharField(blank=True, max_length=300, null=True, verbose_name='Год плавки')),
                ('melt_passport', models.CharField(blank=True, max_length=300, null=True, verbose_name='Номер паспорта плавки')),
                ('is_cast', models.BooleanField(blank=True, default=False, null=True, verbose_name='Это отливка')),
                ('is_by_gost_material_number', models.BooleanField(blank=True, default=True, null=True, verbose_name='Мех.св-ва по ГОСТ')),
                ('galvan_material', models.CharField(blank=True, max_length=300, null=True, verbose_name='Материал для гальваники')),
                ('galvan_units', models.CharField(blank=True, max_length=300, null=True, verbose_name='Ед.изм. для гальваники')),
                ('number_spg', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sert.kernel', verbose_name='Номер СПГ')),
                ('number_unique', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sert.sertnumber', verbose_name='Номер сертификата')),
            ],
            options={
                'verbose_name': 'Вложение',
                'verbose_name_plural': 'Вложения',
            },
        ),
    ]
